BINDIR=bin
VERSION=$(shell git describe --tags || echo "unknown version")
UPX=upx --best
STRIP=llvm-strip -s
CROSS_BUILD=cross build --release --target
TLS=TRUE

CROSS_TARGET_LIST = \
	x86_64-unknown-linux-musl \
	i686-unknown-linux-musl \
	aarch64-unknown-linux-musl \
	armv7-unknown-linux-musleabihf \
	mips-unknown-linux-musl \
	mipsel-unknown-linux-musl

$(CROSS_TARGET_LIST):
ifeq ($(TLS),TRUE)
	$(CROSS_BUILD) $@ --features tls
	cp "target/$@/release/$(NAME)" "$(BINDIR)/$(NAME)-tls-$@"
	$(STRIP) "$(BINDIR)/$(NAME)-tls-$@"
	$(UPX) "$(BINDIR)/$(NAME)-tls-$@"
else
	$(CROSS_BUILD) $@
	cp "target/$@/release/$(NAME)" "$(BINDIR)/$(NAME)-$@"
	$(STRIP) "$(BINDIR)/$(NAME)-$@"
	$(UPX) "$(BINDIR)/$(NAME)-$@"
endif

windows:
	cp assets/libpacket/x64/Packet.lib Packet.lib
	cargo build --target x86_64-pc-windows-msvc --release
	rm -f Packet.lib
	cp "target/x86_64-pc-windows-gnu/release/$(NAME).exe" "$(BINDIR)/$(NAME)-x86_64-pc-windows-gnu.exe"
	$(UPX) "$(BINDIR)/$(NAME)-x86_64-pc-windows-msvc.exe"

bindir:
	rm -rf $(BINDIR)
	mkdir $(BINDIR)

bin_gz=$(addsuffix .gz, $(CROSS_TARGET_LIST))

$(bin_gz): %.gz : %
ifeq ($(TLS),TRUE)
	chmod +x $(BINDIR)/$(NAME)-tls-$(basename $@)
	gzip -f -S -$(VERSION).gz $(BINDIR)/$(NAME)-tls-$(basename $@)
else
	chmod +x $(BINDIR)/$(NAME)-$(basename $@)
	gzip -f -S -$(VERSION).gz $(BINDIR)/$(NAME)-$(basename $@)
endif

gz_release: $(bin_gz)

release: bindir gz_release
